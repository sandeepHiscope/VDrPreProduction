// API configuration
const API_URL = "https://v1.nocodeapi.com/msk/google_sheets/lXGzPhZBjTOdSNNH";
const tabId = "Sheet1";

// Function to get all users
async function getAllUsers() {
    const myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");

    const requestOptions = {
        method: "get",
        headers: myHeaders,
        redirect: "follow"
    };

    try {
        const response = await fetch(`${API_URL}?tabId=${tabId}`, requestOptions);
        const result = await response.text(); // Get response as text first
        console.log("Raw API response:", result); // Debug log
        
        // Parse the text response to JSON
        const data = JSON.parse(result);
        console.log("Parsed data:", data); // Debug log
        return data;
    } catch (error) {
        console.error("Error fetching users:", error);
        throw error;
    }
}

// Function to handle registration
async function registerUser() {
    const registerBtn = document.getElementById("registerBtn");
    const name = document.getElementById("regName").value.trim();
    const email = document.getElementById("regEmail").value.trim();
    const password = document.getElementById("regPassword").value.trim();
    const profession = document.getElementById("regProfession").value.trim(); // Get profession value

    // Validate that all fields are filled
    if (!name || !email || !password || !profession) {
        alert("All fields are required for registration.");
        return;
    }

    try {
        registerBtn.disabled = true;
        registerBtn.textContent = "Registering...";

        // Check if the user already exists
        const searchUrl = `${API_URL}/search?tabId=${tabId}&searchKey=email&searchValue=${encodeURIComponent(email)}`;
        console.log("Searching for existing user with URL:", searchUrl);

        const searchResponse = await fetch(searchUrl);
        const searchResult = await searchResponse.text();
        console.log("Search response:", searchResult);

        // Parse the search response
        const searchData = JSON.parse(searchResult);

        // Check if the email already exists
        if (Array.isArray(searchData) && searchData.length > 0) {
            alert("User already exists! Please login instead.");
            return; // Stop further execution to avoid duplicate registration
        }

        // Proceed with registration if no duplicate found
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        const requestOptions = {
            method: "POST",
            headers: myHeaders,
            redirect: "follow",
            body: JSON.stringify([[profession, name, email, password]]) // Updated to include profession
        };

        const registerResponse = await fetch(`${API_URL}?tabId=${tabId}`, requestOptions);
        const registerResult = await registerResponse.text();
        console.log("Registration response:", registerResult);

        alert("Registration successful!");
        document.getElementById("registerForm").reset();
    } catch (error) {
        console.error("Registration error:", error);
        alert("An error occurred during registration. Please try again.");
    } finally {
        registerBtn.disabled = false;
        registerBtn.textContent = "Register";
    }
}



// Function to handle login
async function loginUser() {
    const loginBtn = document.getElementById("loginBtn");
    const email = document.getElementById("loginEmail").value.trim();
    const password = document.getElementById("loginPassword").value.trim();

    if (!email || !password) {
        alert("Email and password are required for login.");
        return;
    }

    try {
        loginBtn.disabled = true;
        loginBtn.textContent = "Logging in...";

        // Search for the user in the sheet by email
        const searchUrl = `${API_URL}/search?tabId=${tabId}&searchKey=email&searchValue=${encodeURIComponent(email)}`;
        console.log("Searching with URL:", searchUrl);        

        const response = await fetch(searchUrl);
        const result = await response.text(); // Raw text result
        console.log("Raw API response:", result); // Debugging log to see raw response

        // Parse the response to JSON
        const data = JSON.parse(result);
        console.log("Parsed data:", data); // Debugging parsed data

        if (data && data.length > 0) {
            const user = data[0]; // Assuming only one matching user
            console.log("Found user:", user); // Debug log to verify user

            // Debugging log for email and password comparison
            console.log("Entered email:", email);
            console.log("Stored email:", user.email); // Correct field for email
            console.log("Entered password:", password);
            console.log("Stored password:", user.password); // Correct field for password

            // Now checking the user and password with trimming to remove extra spaces
            if (user.email.trim() === email && user.password.trim() === password) {
                alert("Login successful!");
                document.getElementById("loginForm").reset();
            } else {
                alert("Invalid email or password.");
            }
        } else {
            alert("User not found.");
        }
    } catch (error) {
        console.error("Login error:", error);
        alert("An error occurred during login. Please try again.");
    } finally {
        loginBtn.disabled = false;
        loginBtn.textContent = "Login";
    }
}





// Add event listeners when document loads
document.addEventListener("DOMContentLoaded", () => {
    document.getElementById("registerBtn").addEventListener("click", registerUser);
    document.getElementById("loginBtn").addEventListener("click", loginUser);
    console.log("Event listeners attached");
});